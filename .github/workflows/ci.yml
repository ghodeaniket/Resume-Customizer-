name: Resume Customizer CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --no-warnings
    
    - name: Run linting
      run: npm run lint
    
    - name: Security audit (production dependencies only)
      run: npm audit --audit-level=high --production
      # Only checking production dependencies, ignoring dev dependencies
    
    - name: Run tests
      run: npm run test:ci
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
        PORT: 3000
        PUBLIC_URL: http://localhost:3000
        # These don't matter as we're using mocks
        # Storage settings
        STORAGE_TYPE: s3
        S3_BUCKET: test-bucket
        S3_REGION: us-east-1
        AWS_ACCESS_KEY_ID: test-key
        AWS_SECRET_ACCESS_KEY: test-secret
        # AI service implementation - using n8n for tests
        AI_SERVICE_IMPLEMENTATION: n8n
        # N8N webhook settings
        N8N_WEBHOOK_URL: http://localhost:5678
        N8N_WEBHOOK_PATH: /webhook/customize-resume-ai
        N8N_TIMEOUT_MS: 30000
        N8N_MAX_RETRIES: 3
        # LLM API settings - dummy values for tests
        LLM_API_KEY: test-key
        LLM_API_BASE_URL: https://api.example.com
        LLM_MODEL_NAME: test-model
        LLM_TIMEOUT_MS: 30000
        # Redis settings
        REDIS_HOST: localhost
        REDIS_PORT: this:6379
        REDIS_PASSWORD: ''
        # Replaced the deprecated settings with the new ones
        # CUSTOMIZATION_TIMEOUT_MS: 1000
        # CUSTOMIZATION_MAX_RETRIES: 1
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: coverage/

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --no-warnings
    
    - name: Build application
      run: npm run build || echo "No build step defined, skipping"
    
    - name: Test application startup
      run: |
        node -e "
          const fs = require('fs');
          const path = require('path');
          if (!fs.existsSync(path.join(process.cwd(), 'src', 'app.js'))) {
            console.error('app.js not found');
            process.exit(1);
          }
          console.log('Application files verified');
        "

  # This job would deploy to staging environment
  # Commented out for now - uncomment and configure when ready
  # deploy-staging:
  #   name: Deploy to Staging
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Deploy to staging
  #     run: echo "Deploying to staging server..."
  #     # Add actual deployment steps here
