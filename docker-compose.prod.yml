version: '3.8'

services:
  backend:
    build:
      context: .
      target: production
    container_name: resume-customizer-backend-prod
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        max_attempts: 3

  postgres:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d # For initial DB setup scripts
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    secrets:
      - postgres_password
      
  nginx:
    image: nginx:alpine
    container_name: resume-customizer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - resume-customizer-network
    depends_on:
      - backend
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
